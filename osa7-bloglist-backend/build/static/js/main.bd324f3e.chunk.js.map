{"version":3,"sources":["components/BlogList.js","components/User.js","services/user.js","services/blogs.js","reducers/userReducer.js","components/UserStatus.js","components/UserList.js","reducers/blogReducer.js","reducers/notificationReducer.js","components/useField.js","components/Blog.js","components/NewUser.js","components/LoginForm.js","components/BlogForm.js","components/Notification.js","components/Togglable.js","reducers/userInfoReducer.js","components/Error.js","App.js","reducers/store.js","index.js"],"names":["BlogList","title","blogs","blogStyle","borderStyle","borderWidth","borderRadius","paddingTop","paddingBottom","paddingLeft","margin","id","map","blog","key","style","to","User","user","console","log","userBlogs","useSelector","state","filter","x","name","login","username","password","a","axios","post","response","data","createUser","getAll","get","baseUrl","token","getAllWithUserIds","getConfig","headers","Authorization","create","newObject","config","addLikes","put","addComment","comment","deleteBlog","blogToDelete","delete","setToken","newToken","loginUser","dispatch","userService","blogService","window","localStorage","setItem","JSON","stringify","type","userReducer","action","UserStatus","useDispatch","handleLogout","removeItem","padding","paddingRight","display","backgroundColor","onClick","UserList","users","userInfo","length","createBlog","newBlog","blogResp","addLikeToBlog","updatedBlog","addCommentToBlog","text","userid","blogReducer","errorMessage","error","setNotification","message","notification","isError","duration","timeoutID","setTimeout","notificationReducer","useField","useState","value","setValue","onChange","event","target","reset","Blog","history","useHistory","allUsers","blogAdder","find","ownBlog","commentText","onAddLike","onAddComment","preventDefault","onDeleteBlog","confirm","push","className","borderColor","author","href","url","likes","onSubmit","comments","foundUser","findUser","postedBy","NewUser","resetName","newName","resetNewUsername","newUsername","resetNewUserPassword","newUserPassword","onCreate","status","LoginForm","newUserVisible","setNewUserVisible","resetUsername","resetPassword","onLogin","BlogForm","resetTitle","resetAuthor","resetUrl","Notification","Togglable","React","forwardRef","props","ref","visible","setVisible","showWhenVisbile","hideWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","Error","App","allBlogs","sort","b","blogPathMatch","useRouteMatch","matchedBlog","params","userPathMatch","matchedUser","blogFormRef","useRef","useEffect","loggedBlogAppUser","getItem","parse","Home","dgbInfo","obj","path","reducer","combineReducers","userInfoReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd324f3e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst BlogList = ({title, blogs}) => {\r\n\r\n  const blogStyle = {\r\n    borderStyle: 'solid',\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    paddingLeft: 5,\r\n    margin: 2,\r\n  }\r\n\r\n  return(\r\n    <div id='added-blog-list'>\r\n      \r\n      <h3>{title}</h3>\r\n      \r\n        {blogs.map(blog => \r\n        <div key={blog.id} style={blogStyle}>\r\n          <Link to={`/blogs/${blog.id}`} key={blog.id}>{blog.title}</Link>\r\n          </div>\r\n        )}\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogList","import React from 'react'\r\nimport BlogList from './BlogList'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst User = ({user}) => {\r\n  console.log(\"Useriii: \", user)\r\n  \r\n  const userBlogs = useSelector(state => state.blogs.filter(x => x.user === user.id))\r\n\r\n  return (\r\n    <div>\r\n      <h2>{user.name}</h2>\r\n      <BlogList title={'Added blogs'} blogs={userBlogs} />      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User\r\n\r\n//<h2>User: {user.name} {user.username}</h2>\r\n      ","import axios from 'axios'\r\nconst loginUrl = '/api/login'\r\nconst userUrl = '/api/users'\r\n\r\nconst login = async (username, password) => {\r\n  const response = await axios.post(loginUrl, { username, password })\r\n  return response.data\r\n}\r\n\r\nconst createUser = async (name, username, password) => {\r\n  const response = await axios.post(userUrl, { name, username, password })\r\n  return response.data\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(userUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { login, createUser, getAll }\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n//const baseUrl = 'http://localhost:3001/api/blogs'\r\n//const blogsForUserUrl = baseUrl + '/userblogs'\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  console.log(\"Network: Trying to fetch all blogs from \", baseUrl)\r\n  const response = await axios.get(baseUrl)\r\n  console.log(\"Network: Got response: \", response.data)\r\n  return response.data\r\n}\r\n\r\nconst getAllWithUserIds = async () => {\r\n  console.log(\"Network: Trying to fetch all blogs from \", baseUrl)\r\n  const response = await axios.get(baseUrl + '/all')\r\n  console.log(\"Network: Got response: \", response.data)\r\n  return response.data\r\n}\r\n\r\nconst getConfig = () => {\r\n  return { headers: { Authorization: token } }\r\n}\r\n\r\n/*const getBlogsForUser = async () => {\r\n  const config = getConfig()\r\n  const response = await axios.get(`${blogsForUserUrl}`, config)\r\n  console.log(response.data)\r\n  return response.data\r\n}*/\r\n\r\nconst create = async newObject => {\r\n  const config = getConfig()\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst addLikes = async (blog) => {\r\n  const config = getConfig()\r\n  const response = await axios.put(`${baseUrl}/addlike/${blog.id}`, blog, config)\r\n  return response.data\r\n}\r\n\r\nconst addComment = async (blog, comment) => {\r\n  const config = getConfig()\r\n  const response = await axios.put(`${baseUrl}/addcomment/${blog.id}`, comment, config)\r\n  return response.data\r\n}\r\n\r\nconst deleteBlog = async (blogToDelete) => {\r\n  const config = getConfig()\r\n  const response = await axios.delete(`${baseUrl}/${blogToDelete.id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { \r\n  getAll, \r\n  getAllWithUserIds, \r\n  //getBlogsForUser, \r\n  create, \r\n  deleteBlog, \r\n  addLikes, \r\n  addComment,\r\n  setToken,\r\n }","import userService from '../services/user'\r\nimport blogService from '../services/blogs'\r\n\r\n\r\n\r\nexport const initUser = () => {\r\n  return async dispatch => {\r\n    const loggedBlogAppUser = window.localStorage\r\n                    .getItem('loggedBlogAppUser')\r\n\r\n    if(loggedBlogAppUser) {\r\n        const user = JSON.parse(loggedBlogAppUser)\r\n        //setUser(user)\r\n        blogService.setToken(user.token)\r\n        dispatch({ type: 'INIT_USER', data: user })\r\n        //blogService.getBlogsForUser().then(ownBlogs => setUserBlogs(ownBlogs))\r\n    }\r\n  } \r\n}\r\n\r\nexport const loginUser = (username, password) => {\r\n  return async dispatch => {\r\n      const user = await userService.login(username, password)\r\n\r\n      console.log('User: ', user)\r\n      blogService.setToken(user.token)\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogAppUser', JSON.stringify(user)\r\n      )\r\n\r\n      dispatch({ type: 'LOGIN', data: user })\r\n  }\r\n} \r\n\r\nexport const logoutUser = () => {\r\n  return async dispatch => {\r\n    window.localStorage.removeItem('loggedBlogAppUser')\r\n    dispatch({ type: 'LOGOUT' })\r\n  }\r\n}\r\n\r\nexport const createUser = (name, username, password) => {\r\n  return async dispatch => {\r\n    const user = await userService.createUser(name, username, password)\r\n    dispatch({ type: 'CREATE_USER', data: user })\r\n    console.log('Create user response', user)     \r\n  }\r\n}\r\n\r\nconst userReducer = (state = null, action) => {\r\n  console.log(`User: State ${JSON.stringify(state)}, action ${JSON.stringify(action)}`)\r\n  switch(action.type) {\r\n    case 'INIT_USER':\r\n      return action.data\r\n    case 'LOGIN':\r\n      return action.data\r\n    case 'CREATE_USER':\r\n      return action.data\r\n    case 'LOGOUT':\r\n      return null\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logoutUser } from '../reducers/userReducer'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UserStatus = () => {\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.user)\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser())\r\n    console.log('Logout!')\r\n  }\r\n\r\n  const userInfo = () => {\r\n    if(user) {\r\n      return(\r\n        <div>\r\n          {user.name} has logged in. \r\n          <button type=\"button\" onClick={handleLogout}>Logout</button> \r\n        </div>\r\n      )}\r\n    else {\r\n      return \"Please log in\"\r\n    }\r\n  }\r\n\r\n  const padding = {\r\n    paddingRight: 10\r\n  }\r\n\r\n  const barStyle = {\r\n    display: 'flex',\r\n    backgroundColor: 'green'\r\n  }\r\n\r\n  return(\r\n    <div style={barStyle}>\r\n      <Link style={padding} to=\"/\">home</Link>\r\n      <Link style={padding}  to=\"/users\">users</Link>\r\n      {userInfo()}  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserStatus","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UserList = () => {\r\n  const users = useSelector(state => state.userInfo)\r\n\r\n  return(\r\n    <div id='user-list'>\r\n      \r\n      <h3>Users</h3>\r\n      <div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Blogs</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {users.map(user => \r\n            <tr key={user.id}>\r\n              <td><Link to={`/users/${user.id}`}>{user.name}</Link> </td><td>{user.blogs.length}</td>\r\n            </tr>\r\n          )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserList","import blogService from '../services/blogs'\r\n\r\nexport const initBlogs = () => {\r\n  return async dispatch => {\r\n    //const blogs = await blogService.getAll()\r\n    const blogs = await blogService.getAllWithUserIds()\r\n    console.log(\"Init Blogs Got: \", blogs)\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: blogs\r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (newBlog) => {\r\n  return async dispatch => {\r\n    const blog = await blogService.create(newBlog)\r\n    dispatch({\r\n      type: 'CREATE_BLOG',\r\n      data: blog\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteBlog = (blog) => {\r\n  return async dispatch => {\r\n    const blogResp = await blogService.deleteBlog(blog)\r\n    console.log(\"Delete blog response \", blogResp)\r\n    dispatch({\r\n      type: 'DELETE_BLOG',\r\n      data: blog\r\n    })\r\n  }\r\n}\r\n\r\nexport const addLikeToBlog = (blog) => {\r\n  return async dispatch => { \r\n    const updatedBlog = await blogService.addLikes(blog)\r\n    dispatch({\r\n      type: 'UPDATE_BLOG',\r\n      data: updatedBlog\r\n    })\r\n  }\r\n}\r\n\r\nexport const addCommentToBlog = (blog, text, userid) => {\r\n  return async dispatch => {\r\n    const comment = { text,  userid } \r\n    const updatedBlog = await blogService.addComment(blog, comment)\r\n    dispatch({\r\n      type: 'UPDATE_BLOG',\r\n      data: updatedBlog\r\n    })\r\n  }\r\n}\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  console.log(`Blog: State ${JSON.stringify(state)}, action ${JSON.stringify(action)}`)\r\n  \r\n  const blog = action.data\r\n\r\n  switch(action.type) {\r\n    case 'CREATE_BLOG':\r\n      return [...state, blog]\r\n\r\n    case 'INIT_BLOGS':\r\n      return blog\r\n\r\n    case 'UPDATE_BLOG':\r\n      return state.map(x => x.id === blog.id ? blog : x)\r\n\r\n    case 'DELETE_BLOG':\r\n      return state.filter(x => x.id !== blog.id)  \r\n    \r\n      default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default blogReducer\r\n","const msgDuration = 5\r\n\r\nexport const errorMessage = (error) => {\r\n  return setNotification(error, true, msgDuration)\r\n}\r\n\r\nexport const message = (message) => {\r\n  return setNotification(message, false, msgDuration)\r\n}\r\n\r\nexport const setNotification = (notification, isError, duration) => {\r\n  let timeoutID = null\r\n  \r\n  return async dispatch => {\r\n    dispatch({ type: 'MESSAGE', data: { notification, isError }})\r\n    if(timeoutID) {\r\n      dispatch({ type: 'CLEAR_MESSAGE' })\r\n      timeoutID = null\r\n    }\r\n\r\n    timeoutID = setTimeout(() => {\r\n      dispatch({ type: 'CLEAR_MESSAGE' })\r\n      timeoutID = null\r\n    }, duration * 1000)\r\n  }\r\n}\r\n\r\nconst notificationReducer = (state = 'ALKU', action) => {\r\n  console.log(`Notification: State ${JSON.stringify(state)}, action ${JSON.stringify(action)}`)\r\n\r\n  switch(action.type) {\r\n    case 'MESSAGE':\r\n      return action.data\r\n    case 'CLEAR_MESSAGE':\r\n      return ''\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default notificationReducer","import { useState } from 'react'\r\n\r\nconst useField = (type, name) => {\r\n  const [value, setValue] = useState('')\r\n  \r\n  const onChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const reset = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return {\r\n    type,\r\n    value,\r\n    name,\r\n    onChange,\r\n    reset\r\n  }\r\n}\r\n\r\nexport default useField","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { addCommentToBlog, addLikeToBlog, deleteBlog } from '../reducers/blogReducer'\r\nimport { errorMessage, message } from '../reducers/notificationReducer'\r\nimport useField from './useField'\r\n\r\nconst Blog = ({ blog }) => {\r\n \r\n  console.error(\"Blog:::::\", blog)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const allUsers = useSelector(state => state.userInfo)\r\n  const user = useSelector(state => state.user)\r\n\r\n  const blogAdder = allUsers.find(x => x.id === blog.user)\r\n  const ownBlog = blog.user === user.id\r\n\r\n  const { reset: resetCommentText, ...commentText} = useField('text')\r\n\r\n  const blogStyle = {\r\n    borderStyle: 'solid',\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    paddingLeft: 5,\r\n    margin: 2,\r\n  }\r\n\r\n  const ownBlogStyle = {\r\n    backgroundColor: 'yellow',\r\n    borderStyle: 'solid',\r\n    borderColor: 'blue',\r\n    borderWidth: 5,\r\n    borderRadius: 10,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    paddingLeft: 5,\r\n    margin: 2,\r\n  }\r\n\r\n  const findUser = (id) => {\r\n    const foundUser = allUsers.find(x => x.id === id)\r\n    if(foundUser)\r\n      return foundUser.name\r\n    return null\r\n  }\r\n\r\n  const onAddLike = async () => {\r\n    try {\r\n      dispatch(addLikeToBlog(blog))\r\n      dispatch(message(`Blog ${blog.title} liked.`))\r\n      //updateBlogList(blogs.map(x => x.id === updatedBlog.id ? updatedBlog : x))\r\n    } catch (error) {\r\n      dispatch(errorMessage(error.message))\r\n    }\r\n  }\r\n\r\n  const onAddComment = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      dispatch(addCommentToBlog(blog, commentText.value, user.id))\r\n      dispatch(message('Added comment to blog '))\r\n    } catch (error) {\r\n      dispatch(errorMessage(error.message))\r\n    }\r\n  }\r\n\r\n  const onDeleteBlog = async () => {\r\n    if(!window.confirm(`Do you really want to delete blog ${blog.title}?`))\r\n      return\r\n\r\n    try {\r\n      dispatch(deleteBlog(blog))\r\n      //updateBlogList(blogs.filter(x => x.id !== blog.id))\r\n      //setUserBlogs(userBlogs.filter(x => x !== blog.id))\r\n      history.push('/')\r\n    } catch (error) {\r\n      errorMessage(error.message)\r\n    }\r\n  }\r\n\r\n  const showComments = () => {\r\n    if(blog.comments) {\r\n      return (\r\n        <div>\r\n          {blog.comments.map((comment) => \r\n            <p>{comment.text} by {findUser(comment.postedBy)}</p>\r\n          )}\r\n        </div>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  if(!blog) {\r\n    return(\r\n      <div>\r\n        <h1>No blog {JSON.stringify(blog)}</h1>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n    <div className='blog-entry-expanded' style={ownBlog ? ownBlogStyle : blogStyle}>\r\n      {JSON.stringify(blog)}\r\n      <h2>{blog.title}</h2>        \r\n      <p>Author: {blog.author}</p>\r\n      <a href={blog.url}>{blog.url}</a>\r\n      <p className ='likesLine'>{blog.likes} likes  &nbsp;\r\n        <button id='likesButton' onClick={() => onAddLike()}>Add</button></p>\r\n      {ownBlog ?\r\n        <p><button id='deleteButton' onClick={() => onDeleteBlog()}>Delete</button></p> :\r\n        null}\r\n      {blogAdder ? 'Added by ' + blogAdder.name : null}\r\n      <h2>Comments</h2>\r\n      <form onSubmit={onAddComment}>\r\n        <div>\r\n          New Comment\r\n          <input {...commentText} />\r\n        </div>\r\n        <button type='submit'>Send</button>\r\n      </form>\r\n      {showComments()}\r\n    </div>\r\n  )\r\n      }\r\n}\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n//import PropTypes from 'prop-types'\r\nimport useField from './useField'\r\nimport { loginUser, createUser } from '../reducers/userReducer'\r\nimport { errorMessage, message } from '../reducers/notificationReducer'\r\n\r\nconst NewUser = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { reset: resetName, ...newName } = useField('text')\r\n  const { reset: resetNewUsername, ...newUsername } = useField('text')\r\n  const { reset: resetNewUserPassword, ...newUserPassword } = useField('password')\r\n  \r\n  const onCreate = async (event) => {\r\n    event.preventDefault()\r\n\r\n    resetName()\r\n    resetNewUsername()\r\n    resetNewUserPassword()\r\n    \r\n    try {\r\n      dispatch(createUser(newName.value, newUsername.value, newUserPassword.value))\r\n      dispatch(message('Created user: ' + newUsername.value))\r\n    } catch(error) {\r\n      dispatch(errorMessage('Create user failed with error ' + error.message))\r\n    }\r\n\r\n    try {\r\n      dispatch(loginUser(newUsername.value, newUserPassword.value))\r\n      dispatch(message('User ' + newUsername.value + ' just logged in'))\r\n    } catch(error) {\r\n      console.error('Login failed: ', error.message)\r\n      if(error.response.status === 401) {\r\n        dispatch(errorMessage('Wrong username or password!'))\r\n      } else {\r\n        dispatch(errorMessage('Error in login, check your network connection! Error:' + error.message))\r\n      }\r\n    }\r\n    //handleCreate(newName.value, newUsername.value, newUserPassword.value)\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h2>Create A New User</h2>\r\n      <form onSubmit={onCreate}>\r\n      <div>\r\n          Name &nbsp;\r\n          <input {...newName} />\r\n      </div>\r\n      <div>\r\n          Username &nbsp;\r\n          <input {...newUsername} />\r\n        </div>\r\n        <div>\r\n          Password &nbsp;\r\n          <input {...newUserPassword} />\r\n        </div>\r\n        <button id='create-user-button' type='submit'>create</button>\r\n      </form>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default NewUser","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n//import PropTypes from 'prop-types'\r\nimport useField from './useField'\r\nimport { loginUser } from '../reducers/userReducer'\r\nimport { errorMessage, message } from '../reducers/notificationReducer'\r\nimport NewUser from './NewUser'\r\n\r\nconst LoginForm = () => {\r\n  const [newUserVisible, setNewUserVisible] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  \r\n  const { reset: resetUsername, ...username } = useField('text')\r\n  const { reset: resetPassword, ...password } = useField('password')\r\n\r\n\r\n  const onLogin = async (event) => {\r\n    event.preventDefault()\r\n\r\n    resetUsername()\r\n    resetPassword()\r\n\r\n    try {\r\n      dispatch(loginUser(username.value, password.value))\r\n      dispatch(message('User ' + username.value + ' just logged in'))\r\n    } catch(error) {\r\n      console.error('Login failed: ', error.message)\r\n      if(error.response.status === 401) {\r\n        dispatch(errorMessage('Wrong username or password!'))\r\n      } else {\r\n        dispatch(errorMessage('Error in login, check your network connection! Error:' + error.message))\r\n      }\r\n    }\r\n    //handleLogin(username.value, password.value)\r\n  }\r\n\r\n  const showLogin = () => {\r\n    return (\r\n      <div>\r\n      <h2>Login</h2>\r\n      <form onSubmit={onLogin}>\r\n        <div>\r\n          Username &nbsp;\r\n          <input {...username} />\r\n        </div>\r\n        <div>\r\n          Password &nbsp;\r\n          <input {...password} />\r\n        </div>\r\n        <button id='login-button' type='submit'>login</button>\r\n      </form>\r\n\r\n        <button onClick={() => setNewUserVisible(true)}>Create a new user</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const showNewUser = () => {\r\n    return (\r\n      <div>\r\n      <NewUser></NewUser>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  return(\r\n    newUserVisible ? showNewUser() : showLogin()  \r\n  )\r\n}\r\n\r\n/*LoginForm.propTypes = {\r\n  handleLogin: PropTypes.func.isRequired\r\n}*/\r\n\r\nexport default LoginForm","import React from 'react'\r\n//import PropTypes from 'prop-types'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { createBlog } from '../reducers/blogReducer'\r\nimport useField from './useField'\r\n\r\nconst BlogForm = () => {\r\n  const { reset: resetTitle, ...title } = useField('text')\r\n  const { reset: resetAuthor, ...author } = useField('text')\r\n  const { reset: resetUrl, ...url } = useField('text')\r\n\r\n  const dispatch = useDispatch()\r\n  \r\n  const onCreate = async (event) => {\r\n    event.preventDefault()\r\n\r\n    resetTitle()\r\n    resetAuthor()\r\n    resetUrl()\r\n\r\n    dispatch(setNotification(`A new blog \"${title.value}\" by ${author.value} added`, false, 3))\r\n    dispatch(createBlog({ title: title.value, author: author.value, url: url.value, likes: 0 }))\r\n  }\r\n\r\n  \r\n  return(\r\n    <form onSubmit={onCreate}>\r\n      <div>\r\n        Title &nbsp;\r\n        <input {...title} />\r\n      </div>\r\n      <div>\r\n        Author &nbsp;\r\n        <input {...author} />\r\n      </div>\r\n      <div>\r\n        Url &nbsp;\r\n        <input {...url} />\r\n      </div>\r\n      <button id='submit_blog' type='submit'>create</button>\r\n    </form>\r\n  )\r\n}\r\n\r\n/*BlogForm.propTypes = {\r\n  createBlog: PropTypes.func.isRequired,\r\n  showMessage: PropTypes.func.isRequired\r\n}*/\r\n\r\nexport default BlogForm","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector( state => state.notification )\r\n  \r\n  const errorStyle = {\r\n    backgroundColor: 'yellow',\r\n    borderColor: 'red',\r\n    borderStyle: 'solid',\r\n    borderWidth: 10\r\n  }\r\n\r\n  const normalStyle = {\r\n    borderColor: 'green',\r\n    borderStyle: 'solid',\r\n    borderWidth: 10\r\n  }\r\n\r\n  if(notification.notification) {\r\n    const style = notification.isError ? errorStyle : normalStyle\r\n    return (\r\n      <div style={style}>\r\n        {notification.notification}\r\n      </div>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\n//Notification.displayName = 'Notification'\r\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const showWhenVisbile = { display: visible ? 'none' : '' }\r\n  const hideWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return(\r\n    <div>\r\n      <div style={showWhenVisbile}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={hideWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\nexport default Togglable","import userService from '../services/user'\r\n\r\nexport const initUserInfo = () => {\r\n  return async dispatch => {\r\n    const users = await userService.getAll()\r\n    dispatch({ type: 'INIT_USER_INFO', data: users})\r\n  }\r\n}\r\n\r\nconst userReducer = (state =  [], action) => {\r\n  console.log(`UserInfo: State ${JSON.stringify(state)}, action ${JSON.stringify(action)}`)\r\n  switch(action.type) {\r\n    case 'INIT_USER_INFO':\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Error = () => {\r\n\r\n  const history = useHistory()\r\n  return (\r\n    <div>\r\n      <h2>The item you are looking for can not be found!</h2>\r\n      <button onClick={() => history.push('/')}>Go home</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Switch, Route, useRouteMatch, Redirect } from 'react-router-dom'\r\n\r\nimport User from './components/User'\r\nimport UserStatus from './components/UserStatus'\r\nimport UserList from './components/UserList'\r\nimport Blog from './components/Blog'\r\nimport LoginForm from './components/LoginForm'\r\nimport BlogForm from './components/BlogForm'\r\nimport Notification from './components/Notification'\r\nimport Togglable from './components/Togglable'\r\n\r\nimport { initUser } from './reducers/userReducer'\r\nimport { initUserInfo } from './reducers/userInfoReducer'\r\n\r\nimport { errorMessage, message } from './reducers/notificationReducer'\r\nimport { initBlogs } from './reducers/blogReducer'\r\nimport BlogList from './components/BlogList'\r\nimport Error from './components/Error'\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.user)\r\n  const allUsers = useSelector(state => state.userInfo)\r\n\r\n  const allBlogs = useSelector(\r\n    state => state.blogs.sort((a, b) => b.likes - a.likes) \r\n  )\r\n\r\n  const blogPathMatch = useRouteMatch('/blogs/:id')\r\n  const matchedBlog = blogPathMatch ? allBlogs.find(blog => blog.id === blogPathMatch.params.id) : null\r\n  \r\n  const userPathMatch = useRouteMatch('/users/:id')\r\n  const matchedUser = userPathMatch ? allUsers.find(x => x.id === userPathMatch.params.id) : null \r\n  \r\n  const blogFormRef = useRef()\r\n\r\n  useEffect(() => {\r\n    try {\r\n      dispatch(initBlogs())\r\n      dispatch(message('All blogs loaded!'))\r\n    } catch(error) {\r\n      dispatch(errorMessage(error.message))\r\n    }\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    try {\r\n      dispatch(initUser())\r\n      dispatch(initUserInfo())\r\n    } catch(error) {\r\n      dispatch(errorMessage(error.message))\r\n    }\r\n  }, [dispatch])\r\n\r\n \r\n  \r\n  const loginForm = () => {\r\n    return (\r\n      <LoginForm />\r\n    )\r\n  }\r\n\r\n \r\n\r\n  const Home = () => {\r\n    return (\r\n      <div>\r\n        <Togglable buttonLabel='new blog' ref={blogFormRef}>\r\n          <BlogForm  />\r\n        </Togglable>\r\n      \r\n        <BlogList title={'All blogs'} blogs={allBlogs} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const routerConstruct = () => {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n           \r\n          <Route path='/users/:id'>\r\n            {matchedUser ? <User user={matchedUser} /> : <Redirect to=\"/error\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/users\">\r\n            <UserList />\r\n          </Route>\r\n          \r\n          <Route path=\"/blogs/:id\">\r\n            {matchedBlog ? <Blog blog={matchedBlog}/> :\r\n            <Redirect to=\"/error\"/>}\r\n          </Route>\r\n\r\n          <Route path=\"/error\">\r\n            <Error />\r\n          </Route>\r\n          \r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const dgbInfo = (obj) => {\r\n    if(obj !== null)\r\n      return JSON.stringify(obj)\r\n    return \"NULL\"\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>User path match: {dgbInfo(userPathMatch)}</p>\r\n        <p>Blog path match: {dgbInfo(blogPathMatch)}</p>\r\n        <p>User: {dgbInfo(user)}</p>\r\n      </div>\r\n        \r\n      <UserStatus />\r\n\r\n      <h1>Blog App</h1>\r\n    \r\n      <Notification />\r\n      {!user ? loginForm() : routerConstruct()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n/*\r\n<Route path=\"/blogs/:id\">\r\n            <Blog blog={matchedBlog} ownedBlog={isMyBlog(matchedBlog)}/>\r\n          </Route>\r\n*/","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport notificationReducer from './notificationReducer'\r\nimport blogReducer from './blogReducer'\r\nimport userReducer from './userReducer'\r\nimport userInfoReducer from './userInfoReducer'\r\n\r\nconst reducer = combineReducers({\r\n  userInfo: userInfoReducer,\r\n  user: userReducer,\r\n  notification: notificationReducer,\r\n  blogs: blogReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './reducers/store'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>, document.getElementById('root')\r\n)"],"sourceRoot":""}